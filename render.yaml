# services:
#   - type: web
#     env: node
#     name: fh-prod-backend1
#     repo: https://github.com/nand-n/fh
#     buildFilter:
#       paths:
#         - apps/backend/**
#     buildCommand: yarn && yarn build --filter=backend
#     startCommand: cd apps/backend; yarn start
#     envVars:
#       - key: DATABASE_URL
#         fromDatabase:
#           name: fh-prod-db1
#           property: connectionString
#       - key: REDIS_URL
#         fromService:
#           name: fh-prod-redis1
#           type: redis
#           property: connectionString

#   - type: web
#     env: static
#     name: fh-prod-frontend1
#     repo: https://github.com/nand-n/fh
#     buildFilter:
#       paths:
#         - apps/frontend/**
#     buildCommand: yarn && yarn build --filter=frontend
#     staticPublishPath: ./apps/frontend/build
#     routes:
#       - type: rewrite
#         source: /*
#         destination: /index.html
#     envVars:
#       - key: REACT_APP_GRAPHQL_HOST
#         fromService:
#           name: fh-prod-backend1
#           type: web
#           property: host

#   - type: redis
#     name: fh-prod-redis1
#     ipAllowList: []

# databases:
#   - name: fh-prod-db1
#     plan: free



# This is a basic example Blueprint for a Django web service and
# the PostgreSQL database it connects to.
services:
  - type: web # A Python web service named django-app running on a free instance
    plan: free
    name: django-app
    runtime: python
    repo: https://github.com/render-examples/django.git
    buildCommand: "./build.sh"
    startCommand: "python -m gunicorn mysite.asgi:application -k uvicorn.workers.UvicornWorker"
    envVars:
      - key: DATABASE_URL # Sets DATABASE_URL to the connection string of the django-app-db database
        fromDatabase:
          name: django-app-db
          property: connectionString

databases:
  - name: django-app-db # A PostgreSQL database named django-app-db running on a free instance
    plan: free